name: Build and Release APK

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.1.0

permissions:
  contents: write

jobs:
  build:
    name: Build and Release APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Extract version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Building version $VERSION"

      - name: Build Release APK
        run: ./gradlew assembleRelease --no-daemon

      - name: Sign APK (optional - requires keystore)
        if: false  # Set to true when you have a keystore configured
        run: |
          echo "Signing APK..."
          # Add your signing configuration here

      - name: Rename APK
        run: |
          mkdir -p release-artifacts
          cp app/build/outputs/apk/release/app-release-unsigned.apk release-artifacts/pegel-${{ steps.get_version.outputs.version }}.apk

      - name: Extract changelog for this version
        id: changelog
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          # Extract changelog content between this version and the next version header
          CHANGELOG=$(awk "/## \[$VERSION\]/,/## \[/" CHANGELOG.md | sed '/## \[/d' | sed '/^$/d')
          if [ -z "$CHANGELOG" ]; then
            CHANGELOG="Release $VERSION"
          fi
          # Save to file to preserve multiline content
          echo "$CHANGELOG" > changelog.txt

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Pegel v${{ steps.get_version.outputs.version }}
          body_path: changelog.txt
          files: |
            release-artifacts/pegel-${{ steps.get_version.outputs.version }}.apk
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: pegel-apk-${{ steps.get_version.outputs.version }}
          path: release-artifacts/pegel-${{ steps.get_version.outputs.version }}.apk
          retention-days: 90
